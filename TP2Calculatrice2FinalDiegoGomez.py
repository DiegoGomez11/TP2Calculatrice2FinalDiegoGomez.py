# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TP2Calculatrice2Final.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



import sys
import math       # Importation de module pour le calcule mathematique

from PyQt5 import QtCore, QtGui, QtWidgets # Importation de module graphique para la creation du partie graphique.




# Partie du code ajouter par Designer. Partie graphique de la calculatrice
class Ui_ScientifiCalculator(object):
    def setupUi(self, ScientifiCalculator):
        ScientifiCalculator.setObjectName("ScientifiCalculator")
        ScientifiCalculator.resize(522, 919)
        icon = QtGui.QIcon.fromTheme("ScientifiCalculator")
        ScientifiCalculator.setWindowIcon(icon)
        ScientifiCalculator.setToolTipDuration(-1)
        self.centralwidget = QtWidgets.QWidget(ScientifiCalculator)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("1")) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_1.setEnabled(True)
        self.pushButton_1.setGeometry(QtCore.QRect(60, 300, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_1.sizePolicy().hasHeightForWidth())
        self.pushButton_1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_1.setFont(font)
        self.pushButton_1.setAutoFillBackground(False)
        self.pushButton_1.setStyleSheet("\n"
"border: 2px solid #555;\n"
"background-color: rgb(36, 255, 20);\n"
"selection-background-color: rgb(255, 255, 69);\n"
"border-radius: 20px;\n"
"border-style: outset;")
        self.pushButton_1.setAutoDefault(False)
        self.pushButton_1.setDefault(False)
        self.pushButton_1.setFlat(False)
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("2"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_2.setGeometry(QtCore.QRect(160, 300, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("border: 2px solid #555;\n"
"\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("3"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_3.setGeometry(QtCore.QRect(260, 300, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("\n"
"\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_Add = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("+")) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Add.setGeometry(QtCore.QRect(360, 300, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Add.sizePolicy().hasHeightForWidth())
        self.pushButton_Add.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_Add.setFont(font)
        self.pushButton_Add.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(220, 214, 44, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Add.setObjectName("pushButton_Add")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("4")) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_4.setGeometry(QtCore.QRect(60, 390, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("\n"
"\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("7")) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_7.setGeometry(QtCore.QRect(60, 480, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_7.sizePolicy().hasHeightForWidth())
        self.pushButton_7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setStyleSheet("\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_NegPos = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.NegPos()) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_NegPos.setGeometry(QtCore.QRect(60, 570, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_NegPos.sizePolicy().hasHeightForWidth())
        self.pushButton_NegPos.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_NegPos.setFont(font)
        self.pushButton_NegPos.setStyleSheet("border: 2px solid #555;\n"
"\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(55, 161, 199, 255), stop:1 rgba(255, 255, 255, 255));")
        self.pushButton_NegPos.setObjectName("pushButton_NegPos")
        self.pushButton_0 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("0")) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_0.setGeometry(QtCore.QRect(160, 570, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_0.sizePolicy().hasHeightForWidth())
        self.pushButton_0.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_0.setFont(font)
        self.pushButton_0.setStyleSheet("\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_0.setObjectName("pushButton_0")
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("8")) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_8.setGeometry(QtCore.QRect(160, 480, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_8.sizePolicy().hasHeightForWidth())
        self.pushButton_8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setStyleSheet("\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_Point = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.point_button()) # la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Point.setGeometry(QtCore.QRect(260, 570, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Point.sizePolicy().hasHeightForWidth())
        self.pushButton_Point.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(26)
        self.pushButton_Point.setFont(font)
        self.pushButton_Point.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(55, 161, 199, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Point.setObjectName("pushButton_Point")
        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("9"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_9.setGeometry(QtCore.QRect(260, 480, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_9.sizePolicy().hasHeightForWidth())
        self.pushButton_9.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setStyleSheet("\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("5"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_5.setGeometry(QtCore.QRect(160, 390, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setStyleSheet("\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_mult = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("*"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_mult.setGeometry(QtCore.QRect(360, 480, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_mult.sizePolicy().hasHeightForWidth())
        self.pushButton_mult.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_mult.setFont(font)
        self.pushButton_mult.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(201, 196, 71, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_mult.setObjectName("pushButton_mult")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("6"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_6.setGeometry(QtCore.QRect(260, 390, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_6.sizePolicy().hasHeightForWidth())
        self.pushButton_6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setStyleSheet("border: 2px solid #555;\n"
"background-color: rgb(36, 255, 20);\n"
"\n"
"\n"
"border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_sustr = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("-"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_sustr.setGeometry(QtCore.QRect(360, 390, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_sustr.sizePolicy().hasHeightForWidth())
        self.pushButton_sustr.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_sustr.setFont(font)
        self.pushButton_sustr.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(201, 196, 71, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_sustr.setObjectName("pushButton_sustr")
        self.pushButton_Div = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("/"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Div.setGeometry(QtCore.QRect(360, 570, 87, 82))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Div.sizePolicy().hasHeightForWidth())
        self.pushButton_Div.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_Div.setFont(font)
        self.pushButton_Div.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(201, 196, 71, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Div.setObjectName("pushButton_Div")
        self.EcranResults = QtWidgets.QLineEdit(self.centralwidget)
        self.EcranResults.setGeometry(QtCore.QRect(40, 100, 441, 121))
        font = QtGui.QFont()
        font.setFamily("OCR A Extended")
        font.setPointSize(36)
        font.setBold(False)
        font.setWeight(50)
        self.EcranResults.setFont(font)
        self.EcranResults.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.EcranResults.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(141, 159, 166, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.EcranResults.setText("")
        self.EcranResults.setFrame(True)
        self.EcranResults.setCursorPosition(0)
        self.EcranResults.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.EcranResults.setReadOnly(True)
        self.EcranResults.setObjectName("EcranResults")
        self.memory_value = 0 # Initialization de la memoire / Atribut prive pour la memoire
        self.CalculatriceScientifique = QtWidgets.QLabel(self.centralwidget)
        self.CalculatriceScientifique.setGeometry(QtCore.QRect(130, 0, 341, 81))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.CalculatriceScientifique.setFont(font)
        self.CalculatriceScientifique.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.CalculatriceScientifique.setStyleSheet("color: rgb(255, 255, 255);")
        self.CalculatriceScientifique.setObjectName("CalculatriceScientifique")
        self.pushButton_PRCNT = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("%"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_PRCNT.setGeometry(QtCore.QRect(60, 720, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_PRCNT.sizePolicy().hasHeightForWidth())
        self.pushButton_PRCNT.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_PRCNT.setFont(font)
        self.pushButton_PRCNT.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_PRCNT.setObjectName("pushButton_PRCNT")
        self.pushButton_Pi = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("π"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Pi.setGeometry(QtCore.QRect(140, 720, 71, 51))
        self.pushButton_Pi.clicked.connect(self.appuie_pi) # ligne que connect le button pi avec le methode.
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Pi.sizePolicy().hasHeightForWidth())
        self.pushButton_Pi.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("MS UI Gothic")
        font.setPointSize(20)
        self.pushButton_Pi.setFont(font)
        self.pushButton_Pi.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Pi.setObjectName("pushButton_Pi")
        self.pushButton_raiz2 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_square_root())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_raiz2.setGeometry(QtCore.QRect(220, 660, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_raiz2.sizePolicy().hasHeightForWidth())
        self.pushButton_raiz2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_raiz2.setFont(font)
        self.pushButton_raiz2.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_raiz2.setObjectName("pushButton_raiz2")
        self.pushButton_Oprtes = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("("))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Oprtes.setGeometry(QtCore.QRect(60, 660, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Oprtes.sizePolicy().hasHeightForWidth())
        self.pushButton_Oprtes.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Oprtes.setFont(font)
        self.pushButton_Oprtes.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Oprtes.setObjectName("pushButton_Oprtes")
        self.pushButton_X2 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_square())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_X2.setGeometry(QtCore.QRect(220, 720, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_X2.sizePolicy().hasHeightForWidth())
        self.pushButton_X2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_X2.setFont(font)
        self.pushButton_X2.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_X2.setObjectName("pushButton_X2")
        self.pushButton_Sen = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_sine())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Sen.setGeometry(QtCore.QRect(220, 780, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Sen.sizePolicy().hasHeightForWidth())
        self.pushButton_Sen.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Sen.setFont(font)
        self.pushButton_Sen.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Sen.setObjectName("pushButton_Sen")
        self.pushButton_ln = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_ln())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_ln.setGeometry(QtCore.QRect(140, 780, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_ln.sizePolicy().hasHeightForWidth())
        self.pushButton_ln.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_ln.setFont(font)
        self.pushButton_ln.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_ln.setObjectName("pushButton_ln")
        self.pushButton_log = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_log())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_log.setGeometry(QtCore.QRect(60, 780, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_log.sizePolicy().hasHeightForWidth())
        self.pushButton_log.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_log.setFont(font)
        self.pushButton_log.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_log.setObjectName("pushButton_log")
        self.pushButton_Cprtes = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie(")"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Cprtes.setGeometry(QtCore.QRect(140, 660, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Cprtes.sizePolicy().hasHeightForWidth())
        self.pushButton_Cprtes.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Cprtes.setFont(font)
        self.pushButton_Cprtes.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Cprtes.setObjectName("pushButton_Cprtes")
        self.pushButton_results = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.mathCal())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_results.setGeometry(QtCore.QRect(370, 720, 81, 111))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_results.sizePolicy().hasHeightForWidth())
        self.pushButton_results.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_results.setFont(font)
        self.pushButton_results.setStyleSheet("border: 2px solid #555;\n"
"\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(106, 198, 203, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_results.setObjectName("pushButton_results")
        self.BaseBlue = QtWidgets.QLineEdit(self.centralwidget)
        self.BaseBlue.setGeometry(QtCore.QRect(10, 10, 501, 861))
        self.BaseBlue.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.BaseBlue.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0.0393258, y1:0.034, x2:1, y2:1, stop:0 rgba(8, 89, 176, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.BaseBlue.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.BaseBlue.setReadOnly(True)
        self.BaseBlue.setObjectName("BaseBlue")
        self.pushButton_Cos = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_Cosine())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Cos.setGeometry(QtCore.QRect(300, 660, 61, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Cos.sizePolicy().hasHeightForWidth())
        self.pushButton_Cos.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Cos.setFont(font)
        self.pushButton_Cos.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Cos.setObjectName("pushButton_Cos")
        self.pushButton_Tg = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_tangent())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Tg.setGeometry(QtCore.QRect(300, 720, 61, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Tg.sizePolicy().hasHeightForWidth())
        self.pushButton_Tg.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Tg.setFont(font)
        self.pushButton_Tg.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Tg.setObjectName("pushButton_Tg")
        self.pushButton_Ctg = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_cotangent())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Ctg.setGeometry(QtCore.QRect(300, 780, 61, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Ctg.sizePolicy().hasHeightForWidth())
        self.pushButton_Ctg.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Ctg.setFont(font)
        self.pushButton_Ctg.setStyleSheet("border: 2px solid #555;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(225, 79, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Ctg.setObjectName("pushButton_Ctg")
        self.DiegoGomez = QtWidgets.QLabel(self.centralwidget)
        self.DiegoGomez.setGeometry(QtCore.QRect(190, 50, 181, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.DiegoGomez.setFont(font)
        self.DiegoGomez.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.DiegoGomez.setStyleSheet("color: rgb(255, 255, 255);")
        self.DiegoGomez.setObjectName("DiegoGomez")
        self.pushButton_Memory = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.memory_add())
        self.pushButton_Memory.setGeometry(QtCore.QRect(220, 240, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Memory.sizePolicy().hasHeightForWidth())
        self.pushButton_Memory.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Memory.setFont(font)
        self.pushButton_Memory.setStyleSheet("border: 2px solid #555;\n"
"background-color: rgb(255, 160, 52);\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Memory.setObjectName("pushButton_Memory")
        self.pushButton_Clear = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.Appuie("C"))# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Clear.setGeometry(QtCore.QRect(380, 660, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Clear.sizePolicy().hasHeightForWidth())
        self.pushButton_Clear.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Clear.setFont(font)
        self.pushButton_Clear.setStyleSheet("border: 2px solid #555;\n"
"\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(106, 198, 203, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Clear.setObjectName("pushButton_Clear")
        self.pushButton_DelBy1 = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.DelBy1_button())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_DelBy1.setGeometry(QtCore.QRect(380, 240, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_DelBy1.sizePolicy().hasHeightForWidth())
        self.pushButton_DelBy1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_DelBy1.setFont(font)
        self.pushButton_DelBy1.setStyleSheet("border: 2px solid #555;\n"
"background-color: rgb(151, 255, 16);\n"
"\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_DelBy1.setObjectName("pushButton_DelBy1")
        self.pushButton_Memory_Mminus = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.memory_subtract())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Memory_Mminus.setGeometry(QtCore.QRect(140, 240, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Memory_Mminus.sizePolicy().hasHeightForWidth())
        self.pushButton_Memory_Mminus.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Memory_Mminus.setFont(font)
        self.pushButton_Memory_Mminus.setStyleSheet("border: 2px solid #555;\n"
"background-color: rgb(255, 160, 52);\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Memory_Mminus.setObjectName("pushButton_Memory_Mminus")
        self.pushButton_Memory_C = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.memory_clear())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Memory_C.setGeometry(QtCore.QRect(60, 240, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Memory_C.sizePolicy().hasHeightForWidth())
        self.pushButton_Memory_C.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Memory_C.setFont(font)
        self.pushButton_Memory_C.setStyleSheet("border: 2px solid #555;\n"
"background-color: rgb(255, 160, 52);\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Memory_C.setObjectName("pushButton_Memory_C")
        self.pushButton_Memory_R = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.memory_recall())# la dernier partie de la ligne du code permettre de conneter le button avec son methode.
        self.pushButton_Memory_R.setGeometry(QtCore.QRect(300, 240, 71, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Memory_R.sizePolicy().hasHeightForWidth())
        self.pushButton_Memory_R.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_Memory_R.setFont(font)
        self.pushButton_Memory_R.setStyleSheet("border: 2px solid #555;\n"
"background-color: rgb(255, 160, 52);\n"
"\n"
"    border-radius: 20px;\n"
"    border-style: outset;")
        self.pushButton_Memory_R.setObjectName("pushButton_Memory_R")
        self.BaseBlue.raise_()
        self.pushButton_results.raise_()
        self.pushButton_1.raise_()
        self.pushButton_2.raise_()
        self.pushButton_3.raise_()
        self.pushButton_Add.raise_()
        self.pushButton_4.raise_()
        self.pushButton_7.raise_()
        self.pushButton_NegPos.raise_()
        self.pushButton_0.raise_()
        self.pushButton_8.raise_()
        self.pushButton_Point.raise_()
        self.pushButton_9.raise_()
        self.pushButton_5.raise_()
        self.pushButton_mult.raise_()
        self.pushButton_6.raise_()
        self.pushButton_sustr.raise_()
        self.pushButton_Div.raise_()
        self.EcranResults.raise_()
        self.CalculatriceScientifique.raise_()
        self.pushButton_PRCNT.raise_()
        self.pushButton_Pi.raise_()
        self.pushButton_raiz2.raise_()
        self.pushButton_Oprtes.raise_()
        self.pushButton_X2.raise_()
        self.pushButton_Sen.raise_()
        self.pushButton_ln.raise_()
        self.pushButton_log.raise_()
        self.pushButton_Cprtes.raise_()
        self.pushButton_Cos.raise_()
        self.pushButton_Tg.raise_()
        self.pushButton_Ctg.raise_()
        self.DiegoGomez.raise_()
        self.pushButton_Memory.raise_()
        self.pushButton_Clear.raise_()
        self.pushButton_DelBy1.raise_()
        self.pushButton_Memory_Mminus.raise_()
        self.pushButton_Memory_C.raise_()
        self.pushButton_Memory_R.raise_()
        ScientifiCalculator.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ScientifiCalculator)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 522, 21))
        self.menubar.setObjectName("menubar")
        ScientifiCalculator.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(ScientifiCalculator)
        self.statusbar.setObjectName("statusbar")
        ScientifiCalculator.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(ScientifiCalculator)
        self.toolBar.setObjectName("toolBar")
        ScientifiCalculator.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(ScientifiCalculator)
        QtCore.QMetaObject.connectSlotsByName(ScientifiCalculator)




    def mathCal(self): # methode que calcule les operation mathematique de base
            Ecran = self.EcranResults.text()
            try:
                    # Change les symbole de multiplication and division pour un evaluation apropie
                    Ecran = Ecran.replace('×', '*').replace('÷', '/')
                    # Evaluae l'expression et fait le calcule de percentage
                    if '%' in Ecran:
                            parts = Ecran.split('%')
                            if len(parts) == 2 and parts[1] == '':
                                    Results = eval(parts[0]) / 100
                            elif len(parts) == 2:
                                    Results = eval(parts[0]) * eval(parts[1]) / 100
                            else:
                                    self.EcranResults.setText("ERROR")
                                    return
                    else:
                            Results = eval(Ecran)
                    self.EcranResults.setText(str(Results))
            except Exception as e:
                    self.EcranResults.setText("ERROR")

    def calculate_square(self): #metode pour calculer le Carre
            Ecran = self.EcranResults.text() # appel des numero qu'est dans l'ecran
            try:
                    result = float(Ecran) ** 2 # change le numero a float et calcul le carre
                    self.EcranResults.setText(str(result)) #affiche le resultat en str
            except ValueError: # Gestion d'error
                    self.EcranResults.setText("ERROR")
    def calculate_sine(self):# methode que calcule de Sine
            Ecran = self.EcranResults.text()
            try:#Convertion du numero saisie a un numero float et calcule le sine
                    result = math.sin(math.radians(float(Ecran)))
                    self.EcranResults.setText(str(result))
            except ValueError:# Gestion d'error
                    self.EcranResults.setText("ERROR")

    def calculate_Cosine(self):# methode que calcule de Cosine
            Ecran = self.EcranResults.text()
            try:# Convertion du numero saisie a un numero float et calcule le Cosine
                    result = math.cos(math.radians(float(Ecran)))
                    self.EcranResults.setText(str(result))
            except ValueError:# Gestion d'error
                    self.EcranResults.setText("ERROR")

    def calculate_tangent(self):# methode que calcule la Tg
                    Ecran = self.EcranResults.text()
                    try:# Convertion du numero saisie a un numero float et calcule la tangent
                            result = math.tan(math.radians(float(Ecran)))
                            self.EcranResults.setText(str(result))
                    except ValueError:# Gestion d'error
                            self.EcranResults.setText("ERROR")

    def calculate_cotangent(self):# methode que calcule la CTg
            Ecran = self.EcranResults.text()
            try:
                    # Convertion du numero saisie a un numero float et calcule la cotangent
                    angle_in_radians = math.radians(float(Ecran))
                    tangent_value = math.tan(angle_in_radians)
                    if tangent_value == 0:
                            self.EcranResults.setText("ERROR")
                    else:
                            result = 1 / tangent_value
                            self.EcranResults.setText(str(result))
            except ValueError: #Gestion des error
                    self.EcranResults.setText("ERROR")
    def calculate_log(self):# cette methode va calculer le logarithme de base 10
                    Ecran = self.EcranResults.text()
                    try:
                            result = math.log10(math.radians(float(Ecran)))
                            self.EcranResults.setText(str(result))
                    except ValueError:# gestion d'error
                            self.EcranResults.setText("ERROR")

    def calculate_ln(self): # cette methode va calculer le logarithme natural
            Ecran = self.EcranResults.text()
            try:
                    result = math.log(float(Ecran))
                    self.EcranResults.setText(str(result))
            except ValueError: # gestion d'error
                    self.EcranResults.setText("ERROR")

    def calculate_square_root(self):
            Ecran = self.EcranResults.text()
            try:
                   result = math.sqrt(float(Ecran))
                   self.EcranResults.setText(str(result))
            except ValueError:
                   self.EcranResults.setText("ERROR")
    def NegPos(self):# cette methode va permettre de changer le symbole de positive a negative et aussi le contraire.
                Ecran = self.EcranResults.text()
                if "-" in Ecran:
                        self.EcranResults.setText(Ecran.replace("-", ""))
                else:
                        self.EcranResults.setText(f'-{Ecran}')

    def DelBy1_button(self): # cette methode permettre d'ecraser numero par numero de l'arrier par en avant
                Ecran = self.EcranResults.text()
                Ecran = Ecran[:-1]
                self.EcranResults.setText(Ecran)

        # cette methode configure l'utilisation du point pour pouvoir prendre en consideration les numero decimal
    def point_button(self):
            Ecran = self.EcranResults.text() # appel de qu'est ce qu'as dans l'Ecran, pour commencer la boucle conditionel.
            if Ecran == "":# l'Ecran et vide il va le prendre comment "0."
                    self.EcranResults.setText("0.")
            else:# si non il va regarder s'il exist deja un point dans l'ecran en commencan de l'arrier par en avant
                    last_part = Ecran.split()[-1]
                    if "." not in last_part: # s'il n'a pas du point, il garde le chiffre et permettre l'ajoute d'un point.
                            self.EcranResults.setText(f'{Ecran}.')

    def appuie_pi(self):
        try:
           self.EcranResults.setText(str(math.pi))
        except Exception as e:
                            self.EcranResults.setText("ERROR")
    def Appuie(self, appuie): # methode que define la fonction de "C"
            if appuie == "C": # Cet condition fait une appel de qu'estce qu'est ecrit dans l'ecran
                    self.EcranResults.setText("0") # si la condition est vrais, il va mettre tout a zero
            else:
                    if self.EcranResults.text() == "0":
                            self.EcranResults.setText("")
                    self.EcranResults.setText(f'{self.EcranResults.text()}{appuie}') # Si, la condition n'est pas vrai il va garde qu'est ce qu'est ecrit et il va ajouter le nouceau caracterer pour qu'ont puise faire de numero compose(10,21,359).

    def memory_add(self):
            try:
                    self.memory_value += float(self.EcranResults.text())
            except ValueError:
                    self.EcranResults.setText("ERROR")

    def memory_subtract(self):
            try:
                    self.memory_value -= float(self.EcranResults.text())
            except ValueError:
                    self.EcranResults.setText("ERROR")

    def memory_clear(self):
            self.memory_value = 0

    def memory_recall(self):
            self.EcranResults.setText(str(self.memory_value))




    def retranslateUi(self, ScientifiCalculator):
        _translate = QtCore.QCoreApplication.translate
        ScientifiCalculator.setWindowTitle(_translate("ScientifiCalculator", "ScientifiCalculator "))
        self.pushButton_1.setText(_translate("ScientifiCalculator", "1"))
        self.pushButton_2.setText(_translate("ScientifiCalculator", "2"))
        self.pushButton_3.setText(_translate("ScientifiCalculator", "3"))
        self.pushButton_Add.setText(_translate("ScientifiCalculator", "+"))
        self.pushButton_Add.setShortcut(_translate("ScientifiCalculator", "+"))
        self.pushButton_4.setText(_translate("ScientifiCalculator", "4"))
        self.pushButton_7.setText(_translate("ScientifiCalculator", "7"))
        self.pushButton_NegPos.setText(_translate("ScientifiCalculator", "+/-"))
        self.pushButton_NegPos.setShortcut(_translate("ScientifiCalculator", "+, -"))
        self.pushButton_0.setText(_translate("ScientifiCalculator", "0"))
        self.pushButton_8.setText(_translate("ScientifiCalculator", "8"))
        self.pushButton_Point.setText(_translate("ScientifiCalculator", "."))
        self.pushButton_Point.setShortcut(_translate("ScientifiCalculator", "."))
        self.pushButton_9.setText(_translate("ScientifiCalculator", "9"))
        self.pushButton_5.setText(_translate("ScientifiCalculator", "5"))
        self.pushButton_mult.setText(_translate("ScientifiCalculator", "X"))
        self.pushButton_mult.setShortcut(_translate("ScientifiCalculator", "X"))
        self.pushButton_6.setText(_translate("ScientifiCalculator", "6"))
        self.pushButton_sustr.setText(_translate("ScientifiCalculator", "-"))
        self.pushButton_sustr.setShortcut(_translate("ScientifiCalculator", "-"))
        self.pushButton_Div.setText(_translate("ScientifiCalculator", "÷"))
        self.pushButton_Div.setShortcut(_translate("ScientifiCalculator", "/"))
        self.CalculatriceScientifique.setText(_translate("ScientifiCalculator", " Calculatrice-Scientifique "))
        self.pushButton_PRCNT.setText(_translate("ScientifiCalculator", "%"))
        self.pushButton_Pi.setText(_translate("ScientifiCalculator", "π"))
        self.pushButton_raiz2.setText(_translate("ScientifiCalculator", "√"))
        self.pushButton_Oprtes.setText(_translate("ScientifiCalculator", "( "))
        self.pushButton_X2.setText(_translate("ScientifiCalculator", "x²"))
        self.pushButton_Sen.setText(_translate("ScientifiCalculator", "sen"))
        self.pushButton_ln.setText(_translate("ScientifiCalculator", "ln"))
        self.pushButton_log.setText(_translate("ScientifiCalculator", "log"))
        self.pushButton_Cprtes.setText(_translate("ScientifiCalculator", ")"))
        self.pushButton_results.setText(_translate("ScientifiCalculator", "="))
        self.pushButton_Cos.setText(_translate("ScientifiCalculator", "cos"))
        self.pushButton_Tg.setText(_translate("ScientifiCalculator", "tg"))
        self.pushButton_Ctg.setText(_translate("ScientifiCalculator", "ctg"))
        self.DiegoGomez.setText(_translate("ScientifiCalculator", "  DiegoGomez  "))
        self.pushButton_Memory.setText(_translate("ScientifiCalculator", "M+"))
        self.pushButton_Clear.setText(_translate("ScientifiCalculator", "C"))
        self.pushButton_DelBy1.setText(_translate("ScientifiCalculator", "⌫"))
        self.pushButton_Memory_Mminus.setText(_translate("ScientifiCalculator", "M-"))
        self.pushButton_Memory_C.setText(_translate("ScientifiCalculator", "MC"))
        self.pushButton_Memory_R.setText(_translate("ScientifiCalculator", "MR"))
        self.toolBar.setWindowTitle(_translate("ScientifiCalculator", "toolBar"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ScientifiCalculator = QtWidgets.QMainWindow()
    ui = Ui_ScientifiCalculator()
    ui.setupUi(ScientifiCalculator)
    ScientifiCalculator.show()
    sys.exit(app.exec_())